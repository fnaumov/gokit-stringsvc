// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stringsvc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UppercaseRequest struct {
	S                    string   `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UppercaseRequest) Reset()         { *m = UppercaseRequest{} }
func (m *UppercaseRequest) String() string { return proto.CompactTextString(m) }
func (*UppercaseRequest) ProtoMessage()    {}
func (*UppercaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02f8077f7943c5ff, []int{0}
}

func (m *UppercaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UppercaseRequest.Unmarshal(m, b)
}
func (m *UppercaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UppercaseRequest.Marshal(b, m, deterministic)
}
func (m *UppercaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UppercaseRequest.Merge(m, src)
}
func (m *UppercaseRequest) XXX_Size() int {
	return xxx_messageInfo_UppercaseRequest.Size(m)
}
func (m *UppercaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UppercaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UppercaseRequest proto.InternalMessageInfo

func (m *UppercaseRequest) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

type UppercaseResponse struct {
	V                    string   `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UppercaseResponse) Reset()         { *m = UppercaseResponse{} }
func (m *UppercaseResponse) String() string { return proto.CompactTextString(m) }
func (*UppercaseResponse) ProtoMessage()    {}
func (*UppercaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02f8077f7943c5ff, []int{1}
}

func (m *UppercaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UppercaseResponse.Unmarshal(m, b)
}
func (m *UppercaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UppercaseResponse.Marshal(b, m, deterministic)
}
func (m *UppercaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UppercaseResponse.Merge(m, src)
}
func (m *UppercaseResponse) XXX_Size() int {
	return xxx_messageInfo_UppercaseResponse.Size(m)
}
func (m *UppercaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UppercaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UppercaseResponse proto.InternalMessageInfo

func (m *UppercaseResponse) GetV() string {
	if m != nil {
		return m.V
	}
	return ""
}

func (m *UppercaseResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type CountRequest struct {
	S                    string   `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountRequest) Reset()         { *m = CountRequest{} }
func (m *CountRequest) String() string { return proto.CompactTextString(m) }
func (*CountRequest) ProtoMessage()    {}
func (*CountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02f8077f7943c5ff, []int{2}
}

func (m *CountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountRequest.Unmarshal(m, b)
}
func (m *CountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountRequest.Marshal(b, m, deterministic)
}
func (m *CountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountRequest.Merge(m, src)
}
func (m *CountRequest) XXX_Size() int {
	return xxx_messageInfo_CountRequest.Size(m)
}
func (m *CountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountRequest proto.InternalMessageInfo

func (m *CountRequest) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

type CountResponse struct {
	V                    int64    `protobuf:"varint,1,opt,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountResponse) Reset()         { *m = CountResponse{} }
func (m *CountResponse) String() string { return proto.CompactTextString(m) }
func (*CountResponse) ProtoMessage()    {}
func (*CountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02f8077f7943c5ff, []int{3}
}

func (m *CountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountResponse.Unmarshal(m, b)
}
func (m *CountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountResponse.Marshal(b, m, deterministic)
}
func (m *CountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountResponse.Merge(m, src)
}
func (m *CountResponse) XXX_Size() int {
	return xxx_messageInfo_CountResponse.Size(m)
}
func (m *CountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountResponse proto.InternalMessageInfo

func (m *CountResponse) GetV() int64 {
	if m != nil {
		return m.V
	}
	return 0
}

type AuthRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02f8077f7943c5ff, []int{4}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02f8077f7943c5ff, []int{5}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AuthResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*UppercaseRequest)(nil), "pb.UppercaseRequest")
	proto.RegisterType((*UppercaseResponse)(nil), "pb.UppercaseResponse")
	proto.RegisterType((*CountRequest)(nil), "pb.CountRequest")
	proto.RegisterType((*CountResponse)(nil), "pb.CountResponse")
	proto.RegisterType((*AuthRequest)(nil), "pb.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "pb.AuthResponse")
}

func init() { proto.RegisterFile("stringsvc.proto", fileDescriptor_02f8077f7943c5ff) }

var fileDescriptor_02f8077f7943c5ff = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x51, 0x4b, 0xc3, 0x30,
	0x10, 0xc7, 0xcd, 0xe6, 0xc4, 0x9d, 0x1d, 0xeb, 0xc2, 0x84, 0x51, 0x14, 0x46, 0x9e, 0x04, 0xa1,
	0x0f, 0x0e, 0x7c, 0xf0, 0x4d, 0xc4, 0x77, 0xe9, 0xd8, 0x07, 0x68, 0xeb, 0xa1, 0x45, 0x4c, 0x62,
	0x2e, 0x8d, 0x5f, 0xc9, 0x8f, 0x29, 0x69, 0xd3, 0x5a, 0xea, 0xde, 0xf2, 0xbf, 0xfb, 0xe5, 0x7f,
	0x97, 0x7f, 0x60, 0x49, 0xd6, 0x54, 0xf2, 0x8d, 0x5c, 0x99, 0x6a, 0xa3, 0xac, 0xe2, 0x13, 0x5d,
	0x88, 0x2d, 0xc4, 0x07, 0xad, 0xd1, 0x94, 0x39, 0x61, 0x86, 0x5f, 0x35, 0x92, 0xe5, 0x11, 0x30,
	0xda, 0xb0, 0x2d, 0xbb, 0x99, 0x67, 0x8c, 0xc4, 0x0e, 0x56, 0x03, 0x82, 0xb4, 0x92, 0x84, 0x1e,
	0x71, 0x1d, 0xe2, 0x78, 0x0c, 0x53, 0x34, 0x66, 0x33, 0x69, 0xb4, 0x3f, 0x8a, 0x2b, 0x88, 0x9e,
	0x54, 0x2d, 0xed, 0x71, 0xcb, 0x6b, 0x58, 0x84, 0xee, 0xd8, 0x6e, 0x9a, 0x31, 0x27, 0x9e, 0xe1,
	0xe2, 0xb1, 0xb6, 0xef, 0xdd, 0xdd, 0x04, 0xce, 0x0f, 0x84, 0x46, 0xe6, 0x9f, 0x18, 0x2c, 0x7a,
	0xed, 0x7b, 0x2f, 0x39, 0xd1, 0xb7, 0x32, 0xaf, 0x61, 0x7c, 0xaf, 0xc5, 0x3d, 0x44, 0xad, 0x4d,
	0x18, 0xb2, 0x86, 0x99, 0x55, 0x1f, 0x28, 0x83, 0x49, 0x2b, 0xfe, 0xef, 0x7e, 0xf7, 0xc3, 0x60,
	0xb1, 0x6f, 0xa2, 0xda, 0xa3, 0x71, 0x55, 0x89, 0xfc, 0x01, 0xe6, 0x7d, 0x04, 0x7c, 0x9d, 0xea,
	0x22, 0x1d, 0x67, 0x96, 0x5c, 0x8e, 0xaa, 0xed, 0x4c, 0x71, 0xc2, 0x53, 0x98, 0x35, 0x6f, 0xe5,
	0xb1, 0x27, 0x86, 0xa1, 0x24, 0xab, 0x41, 0xa5, 0xe7, 0x6f, 0xe1, 0xd4, 0x6f, 0xcd, 0x97, 0xbe,
	0x39, 0x88, 0x21, 0x89, 0xff, 0x0a, 0x1d, 0x5c, 0x9c, 0x35, 0x1f, 0xb9, 0xfb, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x7f, 0x81, 0xfd, 0xaa, 0xdb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StringServiceClient is the client API for StringService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StringServiceClient interface {
	Uppercase(ctx context.Context, in *UppercaseRequest, opts ...grpc.CallOption) (*UppercaseResponse, error)
	Count(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error)
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
}

type stringServiceClient struct {
	cc *grpc.ClientConn
}

func NewStringServiceClient(cc *grpc.ClientConn) StringServiceClient {
	return &stringServiceClient{cc}
}

func (c *stringServiceClient) Uppercase(ctx context.Context, in *UppercaseRequest, opts ...grpc.CallOption) (*UppercaseResponse, error) {
	out := new(UppercaseResponse)
	err := c.cc.Invoke(ctx, "/pb.StringService/Uppercase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stringServiceClient) Count(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error) {
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, "/pb.StringService/Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stringServiceClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/pb.StringService/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StringServiceServer is the server API for StringService service.
type StringServiceServer interface {
	Uppercase(context.Context, *UppercaseRequest) (*UppercaseResponse, error)
	Count(context.Context, *CountRequest) (*CountResponse, error)
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
}

// UnimplementedStringServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStringServiceServer struct {
}

func (*UnimplementedStringServiceServer) Uppercase(ctx context.Context, req *UppercaseRequest) (*UppercaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Uppercase not implemented")
}
func (*UnimplementedStringServiceServer) Count(ctx context.Context, req *CountRequest) (*CountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Count not implemented")
}
func (*UnimplementedStringServiceServer) Auth(ctx context.Context, req *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Auth not implemented")
}

func RegisterStringServiceServer(s *grpc.Server, srv StringServiceServer) {
	s.RegisterService(&_StringService_serviceDesc, srv)
}

func _StringService_Uppercase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UppercaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServiceServer).Uppercase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.StringService/Uppercase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServiceServer).Uppercase(ctx, req.(*UppercaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StringService_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServiceServer).Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.StringService/Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServiceServer).Count(ctx, req.(*CountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StringService_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServiceServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.StringService/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServiceServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StringService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.StringService",
	HandlerType: (*StringServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Uppercase",
			Handler:    _StringService_Uppercase_Handler,
		},
		{
			MethodName: "Count",
			Handler:    _StringService_Count_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _StringService_Auth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stringsvc.proto",
}
